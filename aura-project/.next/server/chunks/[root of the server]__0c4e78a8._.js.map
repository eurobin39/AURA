{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 68, "column": 0}, "map": {"version":3,"sources":["file:///Users/eurobae/AURA/Aura/aura-project/lib/db.ts"],"sourcesContent":["import { PrismaClient } from \"@prisma/client\";\n\nconst db = new PrismaClient();\n\nexport default db;"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,KAAK,IAAI,6HAAA,CAAA,eAAY;uCAEZ","debugId":null}},
    {"offset": {"line": 75, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 81, "column": 0}, "map": {"version":3,"sources":["file:///Users/eurobae/AURA/Aura/aura-project/app/api/focus-log/route.ts"],"sourcesContent":["// app/api/focus-log/route.ts\nimport { NextRequest, NextResponse } from \"next/server\";\nimport db from \"@/lib/db\";\nimport { getSession } from \"@/lib/session.server\"; // cookies 기반\n\nexport async function GET(req: NextRequest) {\n  const session = await getSession();\n  if (!session?.id) {\n    return NextResponse.json({ error: \"Unauthorized\" }, { status: 401 });\n  }\n\n  const logs = await db.focusLog.findMany({\n    where: { userId: session.id },\n    orderBy: { timestamp: \"desc\" },\n    take: 10,\n  });\n\n  return NextResponse.json(logs);\n}\n\nexport async function POST(req: NextRequest) {\n  const session = await getSession();\n  if (!session?.id) {\n    return NextResponse.json({ error: \"Unauthorized\" }, { status: 401 });\n  }\n\n  const body = await req.json();\n  const { keyboard, mouseClicks, mouseDistance, focusScore } = body;\n\n  try {\n    const newLog = await db.focusLog.create({\n      data: {\n        keyboard,\n        mouseClicks,\n        mouseDistance,\n        focusScore,\n        userId: session.id,\n      },\n    });\n\n    return NextResponse.json(newLog, { status: 201 });\n  } catch (err) {\n    return NextResponse.json({ error: \"Failed to save log\" }, { status: 500 });\n  }\n}\n"],"names":[],"mappings":"AAAA,6BAA6B;;;;;AAC7B;AACA;;;;;;;;;AAGO,eAAe,IAAI,GAAgB;IACxC,MAAM,UAAU,MAAM;IACtB,IAAI,CAAC,SAAS,IAAI;QAChB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAe,GAAG;YAAE,QAAQ;QAAI;IACpE;IAEA,MAAM,OAAO,MAAM,2GAAA,CAAA,UAAE,CAAC,QAAQ,CAAC,QAAQ,CAAC;QACtC,OAAO;YAAE,QAAQ,QAAQ,EAAE;QAAC;QAC5B,SAAS;YAAE,WAAW;QAAO;QAC7B,MAAM;IACR;IAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;AAC3B;AAEO,eAAe,KAAK,GAAgB;IACzC,MAAM,UAAU,MAAM;IACtB,IAAI,CAAC,SAAS,IAAI;QAChB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAe,GAAG;YAAE,QAAQ;QAAI;IACpE;IAEA,MAAM,OAAO,MAAM,IAAI,IAAI;IAC3B,MAAM,EAAE,QAAQ,EAAE,WAAW,EAAE,aAAa,EAAE,UAAU,EAAE,GAAG;IAE7D,IAAI;QACF,MAAM,SAAS,MAAM,2GAAA,CAAA,UAAE,CAAC,QAAQ,CAAC,MAAM,CAAC;YACtC,MAAM;gBACJ;gBACA;gBACA;gBACA;gBACA,QAAQ,QAAQ,EAAE;YACpB;QACF;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC,QAAQ;YAAE,QAAQ;QAAI;IACjD,EAAE,OAAO,KAAK;QACZ,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAqB,GAAG;YAAE,QAAQ;QAAI;IAC1E;AACF","debugId":null}},
    {"offset": {"line": 148, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}