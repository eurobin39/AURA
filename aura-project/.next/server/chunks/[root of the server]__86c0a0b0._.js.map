{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["file:///Users/eurobae/AURA/Aura/aura-project/lib/db.ts"],"sourcesContent":["import { PrismaClient } from \"@prisma/client\";\n\nconst db = new PrismaClient();\n\nexport default db;"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,KAAK,IAAI,6HAAA,CAAA,eAAY;uCAEZ","debugId":null}},
    {"offset": {"line": 30, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 46, "column": 0}, "map": {"version":3,"sources":["file:///Users/eurobae/AURA/Aura/aura-project/lib/session.ts"],"sourcesContent":["// lib/session.ts\nimport { getIronSession, IronSession } from \"iron-session\";\nimport { NextApiRequest, NextApiResponse } from \"next\";\n\nexport interface SessionContent {\n  id?: number;\n}\n\nexport function getSession(req: NextApiRequest, res: NextApiResponse): Promise<IronSession<SessionContent>> {\n  return getIronSession<SessionContent>(req, res, {\n    cookieName: \"delicious-karrot\",\n    password: process.env.COOKIE_PASSWORD!,\n    cookieOptions: {\n      secure: process.env.NODE_ENV === \"production\",\n    },\n  });\n}\n"],"names":[],"mappings":"AAAA,iBAAiB;;;;AACjB;;;;;;AAOO,SAAS,WAAW,GAAmB,EAAE,GAAoB;IAClE,OAAO,CAAA,GAAA,8HAAA,CAAA,iBAAc,AAAD,EAAkB,KAAK,KAAK;QAC9C,YAAY;QACZ,UAAU,QAAQ,GAAG,CAAC,eAAe;QACrC,eAAe;YACb,QAAQ,oDAAyB;QACnC;IACF;AACF","debugId":null}},
    {"offset": {"line": 65, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 72, "column": 0}, "map": {"version":3,"sources":["file:///Users/eurobae/AURA/Aura/aura-project/pages/api/focus-log.ts"],"sourcesContent":["import type { NextApiRequest, NextApiResponse } from \"next\";\nimport db from \"@/lib/db\";\nimport { getSession } from \"@/lib/session\";\n\nexport default async function handler(req: NextApiRequest, res: NextApiResponse) {\n  const session = await getSession(req, res); // ✅ 수정된 함수 사용\n\n  if (!session?.id) {\n    return res.status(401).json({ error: \"Unauthorized\" });\n  }\n\n  const userId = session.id;\n\n  if (req.method === \"GET\") {\n    try {\n      const logs = await db.focusLog.findMany({\n        where: { userId },\n        orderBy: { timestamp: \"desc\" },\n        take: 10,\n      });\n      return res.status(200).json(logs);\n    } catch (err) {\n      console.error(err);\n      return res.status(500).json({ error: \"Failed to fetch focus logs\" });\n    }\n  }\n\n  if (req.method === \"POST\") {\n    const { keyboard, mouseClicks, mouseDistance, focusScore } = req.body;\n    try {\n      const log = await db.focusLog.create({\n        data: {\n          keyboard,\n          mouseClicks,\n          mouseDistance,\n          focusScore,\n          userId,\n        },\n      });\n      return res.status(201).json(log);\n    } catch (err) {\n      console.error(err);\n      return res.status(500).json({ error: \"Failed to save focus log\" });\n    }\n  }\n\n  return res.status(405).json({ error: \"Method not allowed\" });\n}\n"],"names":[],"mappings":";;;AACA;AACA;;;;;;;AAEe,eAAe,QAAQ,GAAmB,EAAE,GAAoB;IAC7E,MAAM,UAAU,MAAM,CAAA,GAAA,uGAAA,CAAA,aAAU,AAAD,EAAE,KAAK,MAAM,cAAc;IAE1D,IAAI,CAAC,SAAS,IAAI;QAChB,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;YAAE,OAAO;QAAe;IACtD;IAEA,MAAM,SAAS,QAAQ,EAAE;IAEzB,IAAI,IAAI,MAAM,KAAK,OAAO;QACxB,IAAI;YACF,MAAM,OAAO,MAAM,kGAAA,CAAA,UAAE,CAAC,QAAQ,CAAC,QAAQ,CAAC;gBACtC,OAAO;oBAAE;gBAAO;gBAChB,SAAS;oBAAE,WAAW;gBAAO;gBAC7B,MAAM;YACR;YACA,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;QAC9B,EAAE,OAAO,KAAK;YACZ,QAAQ,KAAK,CAAC;YACd,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;gBAAE,OAAO;YAA6B;QACpE;IACF;IAEA,IAAI,IAAI,MAAM,KAAK,QAAQ;QACzB,MAAM,EAAE,QAAQ,EAAE,WAAW,EAAE,aAAa,EAAE,UAAU,EAAE,GAAG,IAAI,IAAI;QACrE,IAAI;YACF,MAAM,MAAM,MAAM,kGAAA,CAAA,UAAE,CAAC,QAAQ,CAAC,MAAM,CAAC;gBACnC,MAAM;oBACJ;oBACA;oBACA;oBACA;oBACA;gBACF;YACF;YACA,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;QAC9B,EAAE,OAAO,KAAK;YACZ,QAAQ,KAAK,CAAC;YACd,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;gBAAE,OAAO;YAA2B;QAClE;IACF;IAEA,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;QAAE,OAAO;IAAqB;AAC5D","debugId":null}},
    {"offset": {"line": 134, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 140, "column": 0}, "map": {"version":3,"sources":["file:///Users/eurobae/AURA/Aura/aura-project/node_modules/next/dist/src/server/route-modules/pages-api/module.compiled.js"],"sourcesContent":["if (process.env.NEXT_RUNTIME === 'edge') {\n  module.exports = require('next/dist/server/route-modules/pages-api/module.js')\n} else {\n  if (process.env.NODE_ENV === 'development') {\n    module.exports = require('next/dist/compiled/next-server/pages-api.runtime.dev.js')\n  } else if (process.env.TURBOPACK) {\n    module.exports = require('next/dist/compiled/next-server/pages-api-turbo.runtime.prod.js')\n  } else {\n    module.exports = require('next/dist/compiled/next-server/pages-api.runtime.prod.js')\n  }\n}\n"],"names":["process","env","NEXT_RUNTIME","module","exports","require","NODE_ENV","TURBOPACK"],"mappings":"AAAA,IAAIA,QAAQC,GAAG,CAACC,YAAY,KAAK,MAAQ;;AAEzC,OAAO;IACL,IAAIF,QAAQC,GAAG,CAACK,QAAQ,KAAK,WAAe;QAC1CH,OAAOC,OAAO,GAAGC,QAAQ;IAC3B,OAAO,IAAIL,QAAQC,GAAG,CAACM,SAAS,EAAE;;IAIlC;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 149, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 155, "column": 0}, "map": {"version":3,"sources":["file:///Users/eurobae/AURA/Aura/aura-project/node_modules/next/dist/src/server/route-kind.ts"],"sourcesContent":["export const enum RouteKind {\n  /**\n   * `PAGES` represents all the React pages that are under `pages/`.\n   */\n  PAGES = 'PAGES',\n  /**\n   * `PAGES_API` represents all the API routes under `pages/api/`.\n   */\n  PAGES_API = 'PAGES_API',\n  /**\n   * `APP_PAGE` represents all the React pages that are under `app/` with the\n   * filename of `page.{j,t}s{,x}`.\n   */\n  APP_PAGE = 'APP_PAGE',\n  /**\n   * `APP_ROUTE` represents all the API routes and metadata routes that are under `app/` with the\n   * filename of `route.{j,t}s{,x}`.\n   */\n  APP_ROUTE = 'APP_ROUTE',\n\n  /**\n   * `IMAGE` represents all the images that are generated by `next/image`.\n   */\n  IMAGE = 'IMAGE',\n}\n"],"names":["RouteKind"],"mappings":";;;AAAO,IAAWA,YAAAA,WAAAA,GAAAA,SAAAA,SAAAA;IAChB;;GAEC,GAAA,SAAA,CAAA,QAAA,GAAA;IAED;;GAEC,GAAA,SAAA,CAAA,YAAA,GAAA;IAED;;;GAGC,GAAA,SAAA,CAAA,WAAA,GAAA;IAED;;;GAGC,GAAA,SAAA,CAAA,YAAA,GAAA;IAGD;;GAEC,GAAA,SAAA,CAAA,QAAA,GAAA;WAtBeA;MAwBjB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 178, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 184, "column": 0}, "map": {"version":3,"sources":["file:///Users/eurobae/AURA/Aura/aura-project/node_modules/next/dist/src/build/templates/helpers.ts"],"sourcesContent":["/**\n * Hoists a name from a module or promised module.\n *\n * @param module the module to hoist the name from\n * @param name the name to hoist\n * @returns the value on the module (or promised module)\n */\nexport function hoist(module: any, name: string) {\n  // If the name is available in the module, return it.\n  if (name in module) {\n    return module[name]\n  }\n\n  // If a property called `then` exists, assume it's a promise and\n  // return a promise that resolves to the name.\n  if ('then' in module && typeof module.then === 'function') {\n    return module.then((mod: any) => hoist(mod, name))\n  }\n\n  // If we're trying to hoise the default export, and the module is a function,\n  // return the module itself.\n  if (typeof module === 'function' && name === 'default') {\n    return module\n  }\n\n  // Otherwise, return undefined.\n  return undefined\n}\n"],"names":["hoist","module","name","then","mod","undefined"],"mappings":"AAAA;;;;;;CAMC,GACD;;;AAAO,SAASA,MAAMC,MAAW,EAAEC,IAAY;IAC7C,qDAAqD;IACrD,IAAIA,QAAQD,QAAQ;QAClB,OAAOA,MAAM,CAACC,KAAK;IACrB;IAEA,gEAAgE;IAChE,8CAA8C;IAC9C,IAAI,UAAUD,UAAU,OAAOA,OAAOE,IAAI,KAAK,YAAY;QACzD,OAAOF,OAAOE,IAAI,CAAC,CAACC,MAAaJ,MAAMI,KAAKF;IAC9C;IAEA,6EAA6E;IAC7E,4BAA4B;IAC5B,IAAI,OAAOD,WAAW,cAAcC,SAAS,WAAW;QACtD,OAAOD;IACT;IAEA,+BAA+B;IAC/B,OAAOI;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 211, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 217, "column": 0}, "map": {"version":3,"sources":["file:///Users/eurobae/AURA/Aura/aura-project/node_modules/next/dist/src/build/templates/pages-api.ts"],"sourcesContent":["import { PagesAPIRouteModule } from '../../server/route-modules/pages-api/module.compiled'\nimport { RouteKind } from '../../server/route-kind'\n\nimport { hoist } from './helpers'\n\n// Import the userland code.\nimport * as userland from 'VAR_USERLAND'\n\n// Re-export the handler (should be the default export).\nexport default hoist(userland, 'default')\n\n// Re-export config.\nexport const config = hoist(userland, 'config')\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new PagesAPIRouteModule({\n  definition: {\n    kind: RouteKind.PAGES_API,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n  },\n  userland,\n})\n"],"names":["PagesAPIRouteModule","RouteKind","hoist","userland","config","routeModule","definition","kind","PAGES_API","page","pathname","bundlePath","filename"],"mappings":";;;;;AAAA,SAASA,mBAAmB,QAAQ,uDAAsD;AAC1F,SAASC,SAAS,QAAQ,0BAAyB;AAEnD,SAASC,KAAK,QAAQ,YAAW;AAEjC,4BAA4B;AAC5B,YAAYC,cAAc,eAAc;;;;;;;;;yMAGzBD,QAAAA,EAAMC,uHAAU,WAAU;AAGlC,MAAMC,2KAASF,QAAAA,EAAMC,uHAAU,UAAS;AAGxC,MAAME,cAAc,qMAAIL,sBAAAA,CAAoB;IACjDM,YAAY;QACVC,8JAAMN,YAAAA,CAAUO,SAAS;QACzBC,MAAM;QACNC,UAAU;QACV,2CAA2C;QAC3CC,YAAY;QACZC,UAAU;IACZ;cACAT;AACF,GAAE","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 248, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}